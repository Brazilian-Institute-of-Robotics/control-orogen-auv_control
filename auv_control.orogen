name "auv_control"
# Optionally declare the version number
version "0.1"

# If new data types need to be defined, they have to be put in a separate C++
# header, and this header will be loaded here
# import_types_from "auv_controlType.hpp"

# If the component/deployments use data types that are defined in other oroGen
# projects, these projects should be imported there as well.
import_types_from "base"
import_types_from "6dControl.hpp"
using_library "motor_controller"


# Declare a new task context (i.e., a component)
#
# The corresponding C++ class can be edited in tasks/Task.hpp and
# tasks/Task.cpp, and will be put in the auv_control namespace.
task_context "Controller_Base" do
    property("expected_inputs", "auv_control::ExpectedInputs")
    input_port("cascade", "base::LinearAngular6DCommand")
    input_port("cmd_in", "base::LinearAngular6DCommand")

    periodic(0.01)
    #port_driven "cascade"
    #port_driven "cmd_in"
    output_port("cmd_out", "base::LinearAngular6DCommand")

    operation("addCommandInput").
        argument("name", "string")
    dynamic_input_port(/cmd_\w+/, "base::LinearAngular6DCommand")    

    error_states :INPUT_MISSING, :INPUT_COLLIDING, :INPUT_UNEXPECTED

end

task_context "AUVForceTorqueController" do
    input_port ("cascade", "base::LinearAngular6DCommand")
    port_driven "cascade"    
    #periodic(0.01)

    output_port("motor_command", "base::actuators::Command")

    property("calibration", "base::MatrixXd")

    exception_states :INPUT_MISSING
end

task_context "AUVAlignedVelocityController" do
    subclasses "Controller_Base"
    input_port("pose_sample", "base::samples::RigidBodyState")
    property("pid_settings", "base::LinearAngular6DPIDSettings")
    runtime_states :POSE_SAMPLE_MISSING
end

task_context "AUVAlignedController" do
    subclasses "Controller_Base"
    input_port("pose_sample", " base::samples::RigidBodyState")
    property("pid_settings", "base::LinearAngular6DPIDSettings")
    runtime_states :POSE_SAMPLE_MISSING
end

task_context "AUVWorldController" do
    subclasses "Controller_Base"
    input_port("pose_sample", " base::samples::RigidBodyState")
    runtime_states :POSE_SAMPLE_MISSING
end

task_context "AUVTargetOrientationController" do
    subclasses "Controller_Base"
    input_port("pose_sample", " base::samples::RigidBodyState")
end

